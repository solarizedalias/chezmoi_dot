
if exists('g:done_init_sets') && g:done_init_sets
  finish
endif
let g:done_init_sets = 1

let s:nvim = has('nvim')
{{ if eq .chezmoi.os "darwin" }}
set shell=/usr/local/bin/zsh
{{ else if eq .chezmoi.os "linux" }}
set shell=/bin/zsh
{{ end }}
" ==============================================================================
" encoding
set encoding=utf-8
scriptencoding utf-8
set fileencoding=utf-8
set termencoding=utf-8
set fileencodings=utf-8,ucs-boms,euc-jp,ep932
set fileformats=unix,dos,mac
" set ambiwidth=double
set nobomb
set confirm

" True Color
set termguicolors
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
set guicursor=n-sm:block-blinkon500-CustomCursorN
set guicursor+=v:block-blinkon500-CustomCursorV
set guicursor+=c:ver25-blinkon500-CustomCursorC
set guicursor+=i-ci-ve:ver25-blinkon500-CustomCursorI
set guicursor+=r-cr-o:hor20-blinkon500-CustomCursorN

"set t_Co=256
if !has('gui_running')
  set t_Co=256
endif

set noswapfile

set clipboard+=unnamed

set belloff=all

" line numbers
set number
set relativenumber
set numberwidth=1
set cursorline
set scrolloff=3

" title
set title
set titlestring=%(%m%)%(%{expand(\"%:~\")}%)

" indent
set expandtab
set virtualedit=block
set tabstop=2
set softtabstop=2
set autoindent
set smartindent
set shiftwidth=2

" diffopt
" See https://qiita.com/takaakikasai/items/3d4f8a4867364a46dfa3
" https://github.com/lambdalisue/vim-unified-diff
set diffopt& diffopt+=algorithm:histogram,indent-heuristic

" The feature is incompatible between vim and neovim. So I use it for neovim
" only.
" guard for distributions lacking the 'persistent_undo' feature.
if s:nvim && has('persistent_undo')
  " define a path to store persistent undo files.
  " " create the directory and any parent directories
  let s:persistent_undo_dir = expand('~/.vim/vim-persisted-undo')
  " if the location does not exist.
  if !isdirectory(s:persistent_undo_dir)
    call mkdir(s:persistent_undo_dir, 'p')
  endif    " point Vim to the defined undo directory.
  let &undodir = s:persistent_undo_dir    " finally, enable undo persistence.
  set undofile
endif
set undolevels=10000

set helplang=en
" ======================== FileType ==========================

" Try K on a search term in a help doc.
set keywordprg=:help
if s:nvim
  " man.lua is available by default now
  " runtime ftplugin/man.vim
else
  command! LoadManCommand runtime ftplugin/man.vim
endif

" syntax/sh.vim
" let g:is_bash = 1

set backspace=indent,eol,start

" Search your feeling
set hlsearch
set ignorecase
set smartcase
set incsearch
if s:nvim && exists('+inccommand')
  set inccommand=split
endif

" make cursor move to the beginning of the next line from the end of lines
set whichwrap=b,s,h,l,<,>,[,],~

set wildmenu
set wildignorecase
set wildignore+=.git,*/node_modules/*,*.zwc
set wildmode=list:full
if has('patch-8.2.4325')
  set wildmode=full
  set wildoptions=pum
endif
set history=5000
set list
" set listchars=tab:>_,space:·,eol:$
set listchars=tab:>_,space:·,eol:↵

set completeopt=menuone,noinsert,noselect
set pumheight=25

set showcmd
set suffixes=.bak,~,.o,.h,.info,.swp,.obj,.zwc

set lazyredraw

set updatetime=300
set shortmess+=c
set signcolumn=yes
" set colorcolumn=80

if s:nvim
  set laststatus=3
else
  set laststatus=2
endif
set showtabline=2
set noshowmode

set complete+=k

set splitright
if exists('&splitkeep')
  " Which is better, screen or topline?
  set splitkeep=topline
endif

" if s:nvim
"   set cmdheight=0
" endif

if s:nvim
  " this makes floating windows blend but actually makes the terminal
  " background opaque.
  " set winblend=20
endif

if s:nvim
  set foldtext=
  " Disable folding at startup
  set nofoldenable
  set foldexpr=nvim_treesitter#foldexpr()
  set foldmethod=expr
endif

